// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
A=M
D=A-D
@StackTest.0.0.eq
D;JEQ
D=0
@StackTest.0.1.eq
0;JMP
(StackTest.0.0.eq)
D=-1
(StackTest.0.1.eq)
@SP
A=M
M=D
@SP
M=M+1
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
A=M
D=A-D
@StackTest.1.0.eq
D;JEQ
D=0
@StackTest.1.1.eq
0;JMP
(StackTest.1.0.eq)
D=-1
(StackTest.1.1.eq)
@SP
A=M
M=D
@SP
M=M+1
// push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
A=M
D=A-D
@StackTest.2.0.eq
D;JEQ
D=0
@StackTest.2.1.eq
0;JMP
(StackTest.2.0.eq)
D=-1
(StackTest.2.1.eq)
@SP
A=M
M=D
@SP
M=M+1
// push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
A=M
D=A-D
@StackTest.3.0.lt
D;JLT
D=0
@StackTest.3.1.lt
0;JMP
(StackTest.3.0.lt)
D=-1
(StackTest.3.1.lt)
@SP
A=M
M=D
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
A=M
D=A-D
@StackTest.4.0.lt
D;JLT
D=0
@StackTest.4.1.lt
0;JMP
(StackTest.4.0.lt)
D=-1
(StackTest.4.1.lt)
@SP
A=M
M=D
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
A=M
D=A-D
@StackTest.5.0.lt
D;JLT
D=0
@StackTest.5.1.lt
0;JMP
(StackTest.5.0.lt)
D=-1
(StackTest.5.1.lt)
@SP
A=M
M=D
@SP
M=M+1
// push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
A=M
D=A-D
@StackTest.6.0.gt
D;JGT
D=0
@StackTest.6.1.gt
0;JMP
(StackTest.6.0.gt)
D=-1
(StackTest.6.1.gt)
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
A=M
D=A-D
@StackTest.7.0.gt
D;JGT
D=0
@StackTest.7.1.gt
0;JMP
(StackTest.7.0.gt)
D=-1
(StackTest.7.1.gt)
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
A=M
D=A-D
@StackTest.8.0.gt
D;JGT
D=0
@StackTest.8.1.gt
0;JMP
(StackTest.8.0.gt)
D=-1
(StackTest.8.1.gt)
@SP
A=M
M=D
@SP
M=M+1
// push constant 57
@57
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 53
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
A=M
D=A+D
@SP
A=M
M=D
@SP
M=M+1
// push constant 112
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
A=M
D=A-D
@SP
A=M
M=D
@SP
M=M+1
// neg
@SP
M=M-1
A=M
D=M
D=-D
@SP
A=M
M=D
@SP
M=M+1
// and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
A=M
D=D&A
@SP
A=M
M=D
@SP
M=M+1
// push constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
// or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
A=M
D=D|A
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
(end.of.asm)
@end.of.asm
0;JMP
