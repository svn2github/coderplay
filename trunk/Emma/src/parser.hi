#define FILE_INPUT           1000
#define PROMPT_INPUT         1001
#define STRING_INPUT         1002
#define STATEMENT            1003
#define SIMPLE_STMT          1004
#define COMPOUND_STMT        1005
#define EXPR                 1006
#define ASSIGN_STMT          1007
#define PRINT_STMT           1008
#define READ_STMT            1009
#define CONTINUE_STMT        1010
#define BREAK_STMT           1011
#define RETURN_STMT          1012
#define PACKAGE_STMT         1013
#define IMPORT_STMT          1014
#define RAISE_STMT           1015
#define TARGET               1016
#define TRAILER              1017
#define IF_STMT              1018
#define WHILE_STMT           1019
#define FOR_STMT             1020
#define FUNCDEF              1021
#define CLASSDEF             1022
#define TRY_STMT             1023
#define CATCH_STMT           1024
#define FINALLY_STMT         1025
#define SUITE                1026
#define STMT_BLOCK           1027
#define FOR_EXPR             1028
#define R_EXPR               1029
#define R_TERM               1030
#define R_FACTOR             1031
#define L_EXPR               1032
#define A_EXPR               1033
#define A_TERM               1034
#define FACTOR               1035
#define POWER                1036
#define PRIMARY              1037
#define ATOM                 1038
#define EXPR_LIST            1039
#define PARMLIST             1040
#define OPARM_LIST           1041
#define OPARM                1042
#define KVPAIR               1043
#define ARGLIST              1044
#define OARG                 1045
#define SUBSCRIPTION         1046
#define SINGLEIDX            1047
#define IDXRANGE             1048
#define IDXLIST              1049

Node *parse_file_input();
Node *parse_prompt_input();
Node *parse_string_input();
Node *parse_statement(Node *parent);
Node *parse_simple_stmt(Node *parent);
Node *parse_compound_stmt(Node *parent);
Node *parse_expr(Node *parent);
Node *parse_assign_stmt(Node *parent, Node *first);
Node *parse_print_stmt(Node *parent);
Node *parse_read_stmt(Node *parent);
Node *parse_continue_stmt(Node *parent);
Node *parse_break_stmt(Node *parent);
Node *parse_return_stmt(Node *parent);
Node *parse_package_stmt(Node *parent);
Node *parse_import_stmt(Node *parent);
Node *parse_raise_stmt(Node *parent);
Node *parse_target(Node *parent);
Node *parse_trailer(Node *parent);
Node *parse_if_stmt(Node *parent);
Node *parse_while_stmt(Node *parent);
Node *parse_for_stmt(Node *parent);
Node *parse_funcdef(Node *parent);
Node *parse_classdef(Node *parent);
Node *parse_try_stmt(Node *parent);
Node *parse_catch_stmt(Node *parent);
Node *parse_finally_stmt(Node *parent);
Node *parse_suite(Node *parent);
Node *parse_stmt_block(Node *parent);
Node *parse_for_expr(Node *parent);
Node *parse_r_expr(Node *parent);
Node *parse_r_term(Node *parent);
Node *parse_r_factor(Node *parent);
Node *parse_l_expr(Node *parent);
Node *parse_a_expr(Node *parent);
Node *parse_a_term(Node *parent);
Node *parse_factor(Node *parent);
Node *parse_power(Node *parent);
Node *parse_primary(Node *parent);
Node *parse_atom(Node *parent);
Node *parse_expr_list(Node *parent);
Node *parse_parmlist(Node *parent);
Node *parse_oparm_list(Node *parent);
Node *parse_oparm(Node *parent);
Node *parse_kvpair(Node *parent, Node *first);
Node *parse_arglist(Node *parent);
Node *parse_oarg(Node *parent);
Node *parse_subscription(Node *parent);
Node *parse_singleidx(Node *parent);
Node *parse_idxrange(Node *parent);
Node *parse_idxlist(Node *parent);

extern char *node_types[];
